{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass MyserviceService {\n  isLoggedIn() {\n    throw new Error('Method not implemented.');\n  }\n  constructor(http) {\n    this.http = http;\n    this.baseAPI = \"http://localhost:3000/signupUser\";\n  }\n  //return All data via Get Methos\n  getAll() {\n    return this.http.get(this.baseAPI);\n  }\n  getById(id) {\n    return this.http.get(this.baseAPI + '' + id);\n  }\n  signupData(inputData) {\n    return this.http.post(this.baseAPI, inputData);\n  }\n  updateData(id, inputData) {\n    return this.http.get(this.baseAPI + '' + id, inputData);\n  }\n  isLoggedIn() {\n    return localStorage.getItem('email') != null;\n  }\n}\nMyserviceService.ɵfac = function MyserviceService_Factory(t) {\n  return new (t || MyserviceService)(i0.ɵɵinject(i1.HttpClient));\n};\nMyserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MyserviceService,\n  factory: MyserviceService.ɵfac,\n  providedIn: 'root'\n});\nexport { MyserviceService };","map":{"version":3,"names":["MyserviceService","isLoggedIn","Error","constructor","http","baseAPI","getAll","get","getById","id","signupData","inputData","post","updateData","localStorage","getItem","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\edubridge\\angular\\my-workspace\\projects\\input-output\\src\\app\\myservice.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyserviceService {\n  isLoggedIn() {\n    throw new Error('Method not implemented.');\n  }\n\n  baseAPI = \"http://localhost:3000/signupUser\"\n  constructor(private http:HttpClient) { }\n\n\n  //return All data via Get Methos\n\n  getAll(){\n    return this.http.get(this.baseAPI);\n  }\n\ngetById(id:any){\n  return this.http.get(this.baseAPI+''+id);\n}\nsignupData(inputData:any){\n  return this.http.post(this.baseAPI, inputData);\n}\n\nupdateData(id:any, inputData:any){\n  return this.http.get(this.baseAPI+''+id,inputData);\n}\nisLoggedIn(){\n  return localStorage.getItem('email')!=null;\n}\n}\n\n\n"],"mappings":";;AAGA,MAGaA,gBAAgB;EAC3BC,UAAUA,CAAA;IACR,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAGAC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,OAAO,GAAG,kCAAkC;EACL;EAGvC;EAEAC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;EACpC;EAEFG,OAAOA,CAACC,EAAM;IACZ,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,OAAO,GAAC,EAAE,GAACI,EAAE,CAAC;EAC1C;EACAC,UAAUA,CAACC,SAAa;IACtB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,OAAO,EAAEM,SAAS,CAAC;EAChD;EAEAE,UAAUA,CAACJ,EAAM,EAAEE,SAAa;IAC9B,OAAO,IAAI,CAACP,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,OAAO,GAAC,EAAE,GAACI,EAAE,EAACE,SAAS,CAAC;EACpD;EACAV,UAAUA,CAAA;IACR,OAAOa,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAE,IAAI;EAC5C;;AA3Baf,gBAAgB,C;mBAAhBA,gBAAgB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBnB,gBAAgB,C;SAAhBA,gBAAgB;EAAAoB,OAAA,EAAhBpB,gBAAgB,CAAAqB,IAAA;EAAAC,UAAA,EAFf;AAAM;SAEPtB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}