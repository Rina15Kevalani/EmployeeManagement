{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./myservice.service\";\nclass AppComponent {\n  //constructor DI\n  constructor(serv) {\n    this.serv = serv;\n    this.title = 'servicexample';\n    this.obj = [{\n      name: 'headset'\n    }, {\n      name: 'pen'\n    }, {\n      name: 'books'\n    }, {\n      name: 'pencils'\n    }];\n    this.order = 0;\n    console.log(serv.usr);\n    this.order++;\n    console.log(\"constructor from app component get called\");\n  }\n  delname(a) {\n    this.obj.splice(this.obj.indexOf(a), 1);\n  }\n  ngOnChanges() {\n    console.log(\"ngOnChanges from App component. Order #\" + this.order);\n    this.order++;\n  }\n  ngOnInit() {\n    console.log(\"ngOnInit from App component. Order #\" + this.order);\n    this.order++;\n  }\n  ngDoCheck() {\n    console.log(\"DoCheck from App component. Order #\" + this.order);\n    this.order++;\n  }\n  ngAfterContentInit() {\n    console.log(\"ngAfterContentInit from App component. Order #\" + this.order);\n    this.order++;\n  }\n  ngAfterContentChecked() {\n    console.log(\"AfterContentChecked from App component. Order #\" + this.order);\n    this.order++;\n  }\n  ngAfterViewInit() {\n    console.log(\"AfterViewInit from App component. Order #\" + this.order);\n    this.order++;\n  }\n  ngAfterViewChecked() {\n    console.log(\"AfterViewChecked from App component. Order #\" + this.order);\n    this.order++;\n  }\n  ngOnDestroy() {\n    console.log(\"ngOnDestroy from App component. Order #\" + this.order);\n    this.order++;\n  }\n  callendpoint() {\n    this.serv.getallproducts().subscribe(r => {\n      console.log(r);\n      this.data = r;\n    });\n  }\n  addnewrecord() {\n    this.serv.createRecords(this.id, this.nm, this.cat).subscribe(res => {\n      console.log(res);\n    });\n  }\n  deleterecord() {\n    this.serv.deleterec(this.id).subscribe(res => {\n      console.log(res);\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.MyserviceService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Angular work\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AppComponent };","map":{"version":3,"names":["AppComponent","constructor","serv","title","obj","name","order","console","log","usr","delname","a","splice","indexOf","ngOnChanges","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","ngOnDestroy","callendpoint","getallproducts","subscribe","r","data","addnewrecord","createRecords","id","nm","cat","res","deleterecord","deleterec","i0","ɵɵdirectiveInject","i1","MyserviceService","selectors","features","ɵɵNgOnChangesFeature","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["D:\\edubridge\\angular\\angular projects\\my-workspace\\projects\\servicexample\\src\\app\\app.component.ts","D:\\edubridge\\angular\\angular projects\\my-workspace\\projects\\servicexample\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Product } from '../Product';\nimport { MyserviceService } from './myservice.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'servicexample';\n  data?:Product[]\n\n\n  obj=[{name:'headset'},{name:'pen'},{name:'books'},{name:'pencils'},];\n    order=0\n  //constructor DI\n  constructor(private serv:MyserviceService)\n  {\n    console.log(serv.usr);\n    this.order++;\n    console.log(\"constructor from app component get called\");\n\n  }\n\n\n  delname(a:any){\n    this.obj.splice(this.obj.indexOf(a),1)\n  }\n\n  ngOnChanges() {\n    console.log(\"ngOnChanges from App component. Order #\"+ this.order);\n    this.order++;\n}\nngOnInit() {\n   console.log(\"ngOnInit from App component. Order #\"+ this.order);\n   this.order++;\n}\nngDoCheck() {\n   console.log(\"DoCheck from App component. Order #\"+ this.order);\n   this.order++;\n}\nngAfterContentInit() {\n   console.log(\"ngAfterContentInit from App component. Order #\"+ this.order);\n   this.order++;\n}\nngAfterContentChecked() {\n   console.log(\"AfterContentChecked from App component. Order #\"+ this.order);\n   this.order++;\n}\nngAfterViewInit() {\n    console.log(\"AfterViewInit from App component. Order #\"+ this.order);\n    this.order++;\n}\nngAfterViewChecked() {\n     console.log(\"AfterViewChecked from App component. Order #\"+ this.order);\n     this.order++;\n}\nngOnDestroy() {\n  console.log(\"ngOnDestroy from App component. Order #\"+ this.order);\n  this.order++;\n}\n\nid?:number\nnm?:string\ncat?:string\n\ncallendpoint()\n  {\n    this.serv.getallproducts().subscribe((r:Product |any)=>{console.log(r);this.data=r;})\n\n  }\n  addnewrecord()\n      {\n        this.serv.createRecords(this.id,this.nm,this.cat).subscribe(res=>{console.log(res)})\n      }\n\n      deleterecord()\n      {\n        this.serv.deleterec(this.id).subscribe((res: any)=>{console.log(res)})\n      }\n\n\n\n}\n","<h1>Angular work</h1>\n"],"mappings":";;AAIA,MAKaA,YAAY;EAOvB;EACAC,YAAoBC,IAAqB;IAArB,KAAAA,IAAI,GAAJA,IAAI;IAPxB,KAAAC,KAAK,GAAG,eAAe;IAIvB,KAAAC,GAAG,GAAC,CAAC;MAACC,IAAI,EAAC;IAAS,CAAC,EAAC;MAACA,IAAI,EAAC;IAAK,CAAC,EAAC;MAACA,IAAI,EAAC;IAAO,CAAC,EAAC;MAACA,IAAI,EAAC;IAAS,CAAC,CAAE;IAClE,KAAAC,KAAK,GAAC,CAAC;IAIPC,OAAO,CAACC,GAAG,CAACN,IAAI,CAACO,GAAG,CAAC;IACrB,IAAI,CAACH,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;EAE1D;EAGAE,OAAOA,CAACC,CAAK;IACX,IAAI,CAACP,GAAG,CAACQ,MAAM,CAAC,IAAI,CAACR,GAAG,CAACS,OAAO,CAACF,CAAC,CAAC,EAAC,CAAC,CAAC;EACxC;EAEAG,WAAWA,CAAA;IACTP,OAAO,CAACC,GAAG,CAAC,yCAAyC,GAAE,IAAI,CAACF,KAAK,CAAC;IAClE,IAAI,CAACA,KAAK,EAAE;EAChB;EACAS,QAAQA,CAAA;IACLR,OAAO,CAACC,GAAG,CAAC,sCAAsC,GAAE,IAAI,CAACF,KAAK,CAAC;IAC/D,IAAI,CAACA,KAAK,EAAE;EACf;EACAU,SAASA,CAAA;IACNT,OAAO,CAACC,GAAG,CAAC,qCAAqC,GAAE,IAAI,CAACF,KAAK,CAAC;IAC9D,IAAI,CAACA,KAAK,EAAE;EACf;EACAW,kBAAkBA,CAAA;IACfV,OAAO,CAACC,GAAG,CAAC,gDAAgD,GAAE,IAAI,CAACF,KAAK,CAAC;IACzE,IAAI,CAACA,KAAK,EAAE;EACf;EACAY,qBAAqBA,CAAA;IAClBX,OAAO,CAACC,GAAG,CAAC,iDAAiD,GAAE,IAAI,CAACF,KAAK,CAAC;IAC1E,IAAI,CAACA,KAAK,EAAE;EACf;EACAa,eAAeA,CAAA;IACXZ,OAAO,CAACC,GAAG,CAAC,2CAA2C,GAAE,IAAI,CAACF,KAAK,CAAC;IACpE,IAAI,CAACA,KAAK,EAAE;EAChB;EACAc,kBAAkBA,CAAA;IACbb,OAAO,CAACC,GAAG,CAAC,8CAA8C,GAAE,IAAI,CAACF,KAAK,CAAC;IACvE,IAAI,CAACA,KAAK,EAAE;EACjB;EACAe,WAAWA,CAAA;IACTd,OAAO,CAACC,GAAG,CAAC,yCAAyC,GAAE,IAAI,CAACF,KAAK,CAAC;IAClE,IAAI,CAACA,KAAK,EAAE;EACd;EAMAgB,YAAYA,CAAA;IAER,IAAI,CAACpB,IAAI,CAACqB,cAAc,EAAE,CAACC,SAAS,CAAEC,CAAc,IAAG;MAAClB,OAAO,CAACC,GAAG,CAACiB,CAAC,CAAC;MAAC,IAAI,CAACC,IAAI,GAACD,CAAC;IAAC,CAAC,CAAC;EAEvF;EACAE,YAAYA,CAAA;IAEN,IAAI,CAACzB,IAAI,CAAC0B,aAAa,CAAC,IAAI,CAACC,EAAE,EAAC,IAAI,CAACC,EAAE,EAAC,IAAI,CAACC,GAAG,CAAC,CAACP,SAAS,CAACQ,GAAG,IAAE;MAACzB,OAAO,CAACC,GAAG,CAACwB,GAAG,CAAC;IAAA,CAAC,CAAC;EACtF;EAEAC,YAAYA,CAAA;IAEV,IAAI,CAAC/B,IAAI,CAACgC,SAAS,CAAC,IAAI,CAACL,EAAE,CAAC,CAACL,SAAS,CAAEQ,GAAQ,IAAG;MAACzB,OAAO,CAACC,GAAG,CAACwB,GAAG,CAAC;IAAA,CAAC,CAAC;EACxE;;AAvEOhC,YAAY,C;mBAAZA,YAAY,EAAAmC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,gBAAA;AAAA;AAAZtC,YAAY,C;QAAZA,YAAY;EAAAuC,SAAA;EAAAC,QAAA,GAAAL,EAAA,CAAAM,oBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTzBX,EAAA,CAAAa,cAAA,SAAI;MAAAb,EAAA,CAAAc,MAAA,mBAAY;MAAAd,EAAA,CAAAe,YAAA,EAAK;;;;;SDSRlD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}