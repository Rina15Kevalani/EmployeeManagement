{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass MyserviceService {\n  constructor(http) {\n    this.http = http;\n    this.usr = [];\n    this.url = \"http://localhost:3000/products\";\n    console.log(\"Service get injected in compoent\");\n    this.usr = [{\n      useremail: \"abc@gmail.com\",\n      pwd: \"1234\"\n    }, {\n      useremail: \"qwe@gmail.com\",\n      pwd: \"2345\"\n    }];\n  }\n  getallproducts() {\n    return this.http.get(`${this.url}`);\n  }\n  createRecords(id, nm, cat) {\n    const data = {\n      id: 1000,\n      name: 'PancilHolder',\n      category: 'stationary'\n    };\n    return this.http.post(`http://localhost:3000/products`, data);\n  }\n  deleterec(id) {\n    return this.http.delete(`http://localhost:3000/products/${id}`);\n  }\n}\nMyserviceService.ɵfac = function MyserviceService_Factory(t) {\n  return new (t || MyserviceService)(i0.ɵɵinject(i1.HttpClient));\n};\nMyserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MyserviceService,\n  factory: MyserviceService.ɵfac,\n  providedIn: 'root'\n});\nexport { MyserviceService };","map":{"version":3,"names":["MyserviceService","constructor","http","usr","url","console","log","useremail","pwd","getallproducts","get","createRecords","id","nm","cat","data","name","category","post","deleterec","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\edubridge\\angular\\angular projects\\my-workspace\\projects\\servicexample\\src\\app\\myservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from '../User';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyserviceService {\n\n  usr?:User[]=[]\n   url?:string=\"http://localhost:3000/products\"\n\n  constructor(private http:HttpClient) {\n    console.log(\"Service get injected in compoent\")\n\n    this.usr = [{useremail:\"abc@gmail.com\",pwd:\"1234\"}\n    ,{useremail:\"qwe@gmail.com\",pwd:\"2345\"}]\n\n  }\n\n  getallproducts():Observable<User>\n  {\n    return this.http.get(`${this.url}`)\n  }\n\n\n  createRecords(id?:number , nm?:string , cat?:string){\n    const data ={\n      id:1000,name:'PancilHolder', category:'stationary'\n\n    }\n    return this.http.post(`http://localhost:3000/products`,data)\n  }\n\n  deleterec(id?:number){\n    return this.http.delete(`http://localhost:3000/products/${id}`)\n\n   }\n}\n"],"mappings":";;AAKA,MAGaA,gBAAgB;EAK3BC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,GAAG,GAAS,EAAE;IACb,KAAAC,GAAG,GAAS,gCAAgC;IAG3CC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAE/C,IAAI,CAACH,GAAG,GAAG,CAAC;MAACI,SAAS,EAAC,eAAe;MAACC,GAAG,EAAC;IAAM,CAAC,EACjD;MAACD,SAAS,EAAC,eAAe;MAACC,GAAG,EAAC;IAAM,CAAC,CAAC;EAE1C;EAEAC,cAAcA,CAAA;IAEZ,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAC,GAAG,IAAI,CAACN,GAAG,EAAE,CAAC;EACrC;EAGAO,aAAaA,CAACC,EAAU,EAAGC,EAAU,EAAGC,GAAW;IACjD,MAAMC,IAAI,GAAE;MACVH,EAAE,EAAC,IAAI;MAACI,IAAI,EAAC,cAAc;MAAEC,QAAQ,EAAC;KAEvC;IACD,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAC,gCAAgC,EAACH,IAAI,CAAC;EAC9D;EAEAI,SAASA,CAACP,EAAU;IAClB,OAAO,IAAI,CAACV,IAAI,CAACkB,MAAM,CAAC,kCAAkCR,EAAE,EAAE,CAAC;EAEhE;;AA9BUZ,gBAAgB,C;mBAAhBA,gBAAgB,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAhBxB,gBAAgB,C;SAAhBA,gBAAgB;EAAAyB,OAAA,EAAhBzB,gBAAgB,CAAA0B,IAAA;EAAAC,UAAA,EAFf;AAAM;SAEP3B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}