{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegistrationComponent = class RegistrationComponent {\n  constructor(serv1, formBuilder, router, http) {\n    this.serv1 = serv1;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.http = http;\n    this.submitted = false;\n  }\n  //Hook  function\n  ngOnInit() {\n    //object\n    this.signupForm = this.formBuilder.group({\n      fullname: ['', [Validators.required, Validators.minLength(6), this.customename()]],\n      email: ['', [Validators.required, Validators.email]],\n      pwd: ['', [Validators.required, Validators.minLength(8)]],\n      cfrmpwd: ['', [Validators.required, Validators.minLength(8)]],\n      mobile: ['', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n  //validations\n  get func() {\n    return this.signupForm.controls;\n  }\n  passwordMatchValidator(formGroup) {\n    const pwd = formGroup.controls['pwd'].value;\n    const cfrmpwd = formGroup.controls['cfrmpwd'].value;\n    return pwd === cfrmpwd ? null : {\n      mismatch: true\n    };\n  }\n  customename() {\n    return ctrl => {\n      var regexpression = /^[a-zA-Z]+$/;\n      if (!regexpression.test(ctrl.value)) {\n        return {\n          namenotmatch: true\n        };\n      }\n      return null;\n    };\n  }\n  keyPress(event) {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) {\n      event.preventDefault();\n    }\n  }\n  //jsp server used navigate another page\n  signUp() {\n    this.submitted = true;\n    if (this.signupForm.invalid) {\n      return;\n    }\n    this.http.post(\"http://localhost:3000/signupUser\", this.signupForm.value).subscribe(res => {\n      alert(\"Regitration Successful !\");\n      console.log(this.signupForm.value);\n      this.router.navigate(['/Login']);\n      this.signupForm.reset();\n    }, err => {\n      alert(\"Something went wrong\");\n    });\n  }\n};\nRegistrationComponent = __decorate([Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})], RegistrationComponent);\nexport { RegistrationComponent };","map":{"version":3,"names":["Component","Validators","RegistrationComponent","constructor","serv1","formBuilder","router","http","submitted","ngOnInit","signupForm","group","fullname","required","minLength","customename","email","pwd","cfrmpwd","mobile","pattern","validators","passwordMatchValidator","func","controls","formGroup","value","mismatch","ctrl","regexpression","test","namenotmatch","keyPress","event","inputChar","String","fromCharCode","charCode","keyCode","preventDefault","signUp","invalid","post","subscribe","res","alert","console","log","navigate","reset","err","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\edubridge\\angular\\my-workspace\\projects\\input-output\\src\\app\\registration\\registration.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormGroup, FormBuilder, AbstractControl, FormControl, Validators, ValidationErrors, ValidatorFn} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MyserviceService } from '../myservice.service';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent {\n\n public signupForm !:FormGroup ;\n  submitted = false\n  constructor(private serv1:MyserviceService,private formBuilder: FormBuilder, private router : Router, private http:HttpClient){}\n      //Hook  function\n  ngOnInit():void{\n        //object\n      this.signupForm = this.formBuilder.group({\n          fullname: ['',[Validators.required,Validators.minLength(6),this.customename()]],\n          email:['',[Validators.required,Validators.email]],\n          pwd:['',[Validators.required,Validators.minLength(8) ]],\n          cfrmpwd:['',[Validators.required,Validators.minLength(8)]],\n          mobile: ['', [ Validators.required,Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]]\n      },{\n        validators: this.passwordMatchValidator\n      });\n\n  }\n\n  //validations\n  get func():{[m:string]:AbstractControl}\n  {\n      return this.signupForm.controls;\n  }\n  passwordMatchValidator(formGroup: FormGroup) {\n    const pwd = formGroup.controls['pwd'].value;\n    const cfrmpwd = formGroup.controls['cfrmpwd'].value;\n\n    return pwd === cfrmpwd ? null : { mismatch: true };\n  }\n\n\n  customename(){\n    return (ctrl:AbstractControl) : ValidationErrors | null =>\n    {\n      var regexpression = /^[a-zA-Z]+$/\n      if( ! regexpression.test(ctrl.value))\n              {\n                return {namenotmatch:true}\n              }\n\n      return null\n    };\n  }\n\n  keyPress(event: any) {\n    const pattern = /[0-9\\+\\-\\ ]/;\n    let inputChar = String.fromCharCode(event.charCode);\n    if (event.keyCode != 8 && !pattern.test(inputChar)) {\n      event.preventDefault();\n    }\n  }\n\n\n  //jsp server used navigate another page\n  signUp(){\n    this.submitted=true;\n      if(this.signupForm.invalid){\n        return\n      }\n      this.http.post<any>(\"http://localhost:3000/signupUser\",this.signupForm.value).subscribe(res=>{\n        alert(\"Regitration Successful !\");\n        console.log(this.signupForm.value);\n        this.router.navigate(['/Login']);\n        this.signupForm.reset();\n      },err=>{\n        alert(\"Something went wrong\");\n      });\n  }\n\n\n\n\n\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}