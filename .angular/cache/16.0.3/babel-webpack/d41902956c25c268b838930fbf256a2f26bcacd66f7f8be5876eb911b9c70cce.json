{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../myservice.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nclass authGuard {\n  constructor(serv1, route, http) {\n    this.serv1 = serv1;\n    this.route = route;\n    this.http = http;\n  }\n  canActivate(route, state) {\n    if (this.serv1.isLoggedIn()) {\n      return true;\n    } else {\n      this.route.navigate(['Login']);\n      return false;\n    }\n  }\n}\nauthGuard.ɵfac = function authGuard_Factory(t) {\n  return new (t || authGuard)(i0.ɵɵinject(i1.MyserviceService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.HttpClient));\n};\nauthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: authGuard,\n  factory: authGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { authGuard };\n;","map":{"version":3,"names":["authGuard","constructor","serv1","route","http","canActivate","state","isLoggedIn","navigate","i0","ɵɵinject","i1","MyserviceService","i2","Router","i3","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\edubridge\\angular\\my-workspace\\projects\\input-output\\src\\app\\guard\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { MyserviceService } from '../myservice.service';\nimport { HttpClient } from '@angular/common/http';\nimport { state } from '@angular/animations';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class authGuard implements CanActivate{\n\n  constructor(private serv1:MyserviceService, private route : Router, private http:HttpClient){}\n\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\n      if(this.serv1.isLoggedIn()){\n        return true;\n      }else{\n        this.route.navigate(['Login']);\n        return false\n      }\n\n  }\n\n};\n"],"mappings":";;;;AAQA,MAIaA,SAAS;EAEpBC,YAAoBC,KAAsB,EAAUC,KAAc,EAAUC,IAAe;IAAvE,KAAAF,KAAK,GAALA,KAAK;IAA2B,KAAAC,KAAK,GAALA,KAAK;IAAmB,KAAAC,IAAI,GAAJA,IAAI;EAAa;EAG7FC,WAAWA,CACTF,KAA6B,EAC7BG,KAA0B;IAExB,IAAG,IAAI,CAACJ,KAAK,CAACK,UAAU,EAAE,EAAC;MACzB,OAAO,IAAI;KACZ,MAAI;MACH,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC9B,OAAO,KAAK;;EAGlB;;AAhBWR,SAAS,C;mBAATA,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA,GAAAL,EAAA,CAAAC,QAAA,CAAAK,EAAA,CAAAC,UAAA;AAAA;AAAThB,SAAS,C;SAATA,SAAS;EAAAiB,OAAA,EAATjB,SAAS,CAAAkB,IAAA;EAAAC,UAAA,EAHR;AAAM;SAGPnB,SAAS;AAkBrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}