{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nlet EmployeeListComponent = class EmployeeListComponent {\n  constructor() {\n    this.item = new EventEmitter();\n    this.srcdata = [];\n  }\n  searchitem() {\n    this.srcdata = this.listprt.filter(v => v.empnm.indexOf(this.src) !== -1);\n  }\n  fetchitem(e) {\n    this.item.emit(e);\n  }\n  func(e) {\n    console.log(e);\n  }\n  getColor(empid) {\n    if (empid <= 100) return \"dark blue\";else return \"green\";\n  }\n};\n__decorate([Input()], EmployeeListComponent.prototype, \"listprt\", void 0);\n__decorate([Output()], EmployeeListComponent.prototype, \"item\", void 0);\nEmployeeListComponent = __decorate([Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})], EmployeeListComponent);\nexport { EmployeeListComponent };","map":{"version":3,"names":["Component","EventEmitter","Input","Output","EmployeeListComponent","constructor","item","srcdata","searchitem","listprt","filter","v","empnm","indexOf","src","fetchitem","e","emit","func","console","log","getColor","empid","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\edubridge\\angular\\my-workspace\\projects\\input-output\\src\\app\\employee-list\\employee-list.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Employee } from '../../Employee';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent {\n  @Input() listprt:Employee |any\n  @Output() item=new EventEmitter<Employee>()\n\n  emp?:Employee\n  srcdata:Employee[]=[]\n  src?:string |any\n  edu?:string |any\n\n  searchitem(){\n    this.srcdata=\n      this.listprt.filter(\n      (v:any)=>\n      v.empnm.indexOf(this.src) !==-1\n)\n  }\n\n  fetchitem(e:any)\n  {\n    this.item.emit(e);\n  }\n\n  func(e:any)\n  {\n    console.log(e);\n  }\n  getColor(empid:any){\n    if(empid<=100)\n      return \"dark blue\"\n\n      else\n      return \"green\"\n  }\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAQtE,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EAAlCC,YAAA;IAEY,KAAAC,IAAI,GAAC,IAAIL,YAAY,EAAY;IAG3C,KAAAM,OAAO,GAAY,EAAE;EA8BvB;EA1BEC,UAAUA,CAAA;IACR,IAAI,CAACD,OAAO,GACV,IAAI,CAACE,OAAO,CAACC,MAAM,CAClBC,CAAK,IACNA,CAAC,CAACC,KAAK,CAACC,OAAO,CAAC,IAAI,CAACC,GAAG,CAAC,KAAI,CAAC,CAAC,CACpC;EACC;EAEAC,SAASA,CAACC,CAAK;IAEb,IAAI,CAACV,IAAI,CAACW,IAAI,CAACD,CAAC,CAAC;EACnB;EAEAE,IAAIA,CAACF,CAAK;IAERG,OAAO,CAACC,GAAG,CAACJ,CAAC,CAAC;EAChB;EACAK,QAAQA,CAACC,KAAS;IAChB,IAAGA,KAAK,IAAE,GAAG,EACX,OAAO,WAAW,MAGlB,OAAO,OAAO;EAClB;CAGD;AAlCUC,UAAA,EAARrB,KAAK,EAAE,C,qDAAsB;AACpBqB,UAAA,EAATpB,MAAM,EAAE,C,kDAAkC;AAFhCC,qBAAqB,GAAAmB,UAAA,EALjCvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWtB,qBAAqB,CAmCjC;SAnCYA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}