{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegistrationComponent = class RegistrationComponent {\n  constructor(serv1, formBuilder, router, http) {\n    this.serv1 = serv1;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.http = http;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.signupForm = this.formBuilder.group({\n      fullname: ['', [Validators.required, Validators.minLength(6)]],\n      email: ['', [Validators.required, Validators.email]],\n      pwd: ['', [Validators.required, Validators.minLength(8)]],\n      cpwd: ['', [Validators.required]],\n      mobile: ['', [Validators.required, Validators.pattern(\"^[0-9]*$\"), Validators.minLength(10), Validators.maxLength(10)]]\n    });\n  }\n  get func() {\n    return this.signupForm.controls;\n  }\n  signUp() {\n    this.submitted = true;\n    if (this.signupForm.invalid) {\n      return;\n    }\n    this.http.post(\"http://localhost:3000/signupUser\", this.signupForm.value).subscribe(res => {\n      alert(\"Regitration Successful !\");\n      console.log(this.signupForm.value);\n      this.signupForm.reset();\n      this.router.navigate(['/Login']);\n    }, err => {\n      alert(\"Something went wrong\");\n    });\n  }\n};\nRegistrationComponent = __decorate([Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})], RegistrationComponent);\nexport { RegistrationComponent };","map":{"version":3,"names":["Component","Validators","RegistrationComponent","constructor","serv1","formBuilder","router","http","submitted","ngOnInit","signupForm","group","fullname","required","minLength","email","pwd","cpwd","mobile","pattern","maxLength","func","controls","signUp","invalid","post","value","subscribe","res","alert","console","log","reset","navigate","err","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\edubridge\\angular\\my-workspace\\projects\\input-output\\src\\app\\registration\\registration.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormGroup, FormBuilder, AbstractControl, FormControl, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MyserviceService } from '../myservice.service';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent {\n\n public signupForm !:FormGroup ;\n  submitted = false\n  constructor(private serv1:MyserviceService,private formBuilder: FormBuilder, private router : Router, private http:HttpClient){}\n\n  ngOnInit():void{\n\n      this.signupForm = this.formBuilder.group(\n        {\n          fullname: ['',[Validators.required,Validators.minLength(6)]],\n          email:['',[Validators.required,Validators.email]],\n          pwd:['',[Validators.required,Validators.minLength(8)]],\n          cpwd:['',[Validators.required]],\n          mobile:['',[Validators.required,Validators.pattern(\"^[0-9]*$\"),Validators.minLength(10),Validators.maxLength(10)]]\n      }\n      );\n  }\n  get func():{[m:string]:AbstractControl}\n  {\n      return this.signupForm.controls;\n  }\n  signUp(){\n      this.submitted=true;\n      if(this.signupForm.invalid){\n        return\n      }\n      this.http.post<any>(\"http://localhost:3000/signupUser\",this.signupForm.value).subscribe(res=>{\n        alert(\"Regitration Successful !\");\n        console.log(this.signupForm.value);\n        this.signupForm.reset();\n        this.router.navigate(['/Login']);\n      },err=>{\n        alert(\"Something went wrong\");\n      });\n  }\n\n\n\n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAA8DC,UAAU,QAAO,gBAAgB;AAS/F,IAAaC,qBAAqB,GAAlC,MAAaA,qBAAqB;EAIhCC,YAAoBC,KAAsB,EAASC,WAAwB,EAAUC,MAAe,EAAUC,IAAe;IAAzG,KAAAH,KAAK,GAALA,KAAK;IAA0B,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAmB,KAAAC,IAAI,GAAJA,IAAI;IADlH,KAAAC,SAAS,GAAG,KAAK;EAC8G;EAE/HC,QAAQA,CAAA;IAEJ,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CACtC;MACEC,QAAQ,EAAE,CAAC,EAAE,EAAC,CAACX,UAAU,CAACY,QAAQ,EAACZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5DC,KAAK,EAAC,CAAC,EAAE,EAAC,CAACd,UAAU,CAACY,QAAQ,EAACZ,UAAU,CAACc,KAAK,CAAC,CAAC;MACjDC,GAAG,EAAC,CAAC,EAAE,EAAC,CAACf,UAAU,CAACY,QAAQ,EAACZ,UAAU,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACtDG,IAAI,EAAC,CAAC,EAAE,EAAC,CAAChB,UAAU,CAACY,QAAQ,CAAC,CAAC;MAC/BK,MAAM,EAAC,CAAC,EAAE,EAAC,CAACjB,UAAU,CAACY,QAAQ,EAACZ,UAAU,CAACkB,OAAO,CAAC,UAAU,CAAC,EAAClB,UAAU,CAACa,SAAS,CAAC,EAAE,CAAC,EAACb,UAAU,CAACmB,SAAS,CAAC,EAAE,CAAC,CAAC;KACpH,CACA;EACL;EACA,IAAIC,IAAIA,CAAA;IAEJ,OAAO,IAAI,CAACX,UAAU,CAACY,QAAQ;EACnC;EACAC,MAAMA,CAAA;IACF,IAAI,CAACf,SAAS,GAAC,IAAI;IACnB,IAAG,IAAI,CAACE,UAAU,CAACc,OAAO,EAAC;MACzB;;IAEF,IAAI,CAACjB,IAAI,CAACkB,IAAI,CAAM,kCAAkC,EAAC,IAAI,CAACf,UAAU,CAACgB,KAAK,CAAC,CAACC,SAAS,CAACC,GAAG,IAAE;MAC3FC,KAAK,CAAC,0BAA0B,CAAC;MACjCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACrB,UAAU,CAACgB,KAAK,CAAC;MAClC,IAAI,CAAChB,UAAU,CAACsB,KAAK,EAAE;MACvB,IAAI,CAAC1B,MAAM,CAAC2B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC,EAACC,GAAG,IAAE;MACLL,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CAAC;EACN;CAOD;AA1CY3B,qBAAqB,GAAAiC,UAAA,EALjCnC,SAAS,CAAC;EACToC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWpC,qBAAqB,CA0CjC;SA1CYA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}